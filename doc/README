                        * ====================== *
                        |  How to build PeerTrust |
                        * ====================== *

           Adaption from the FOP build.xml written by Stefano Mazzocchi
                by Giacomo Pati with some addition by Fotis Jannidis
           Adapted by Ingo Brunkhorst and Daniel Olmedilla

Introduction
============

In the PeerTrust project we are developing and investigating policy languages to describe trust and security requirements on the Semantic Web. Such policies will be one component of a run-time system that can negotiate to establish trust on the Semantic Web. The PeerTrust system uses guarded distributed logic programs as the basis for a simple yet expressive policy and trust negotiation language, built upon the rule layer of the Semantic Web layer cake.

The homepage of Peertrust is http://www.learninglab.de/peertrust/

Installing the build tools
==========================

Building the latest versions of Peertrust is automated
using Ant which is a little but very handy tool that 
uses a build file written in XML (this file) as building instructions.
 
For more information refer to "http://ant.apache.org/".

Additionally you have to make sure, that the "JAVA_HOME" environment
property should be set to match the JVM you want to use. That's it.

Building instructions
=====================

First, make sure your current working directory is where 
this very file is located. Then just type

	ant

or, if it doesn't work

	build

to create the settings for an environment to suit Ant.

After the above command you should see a help screen
describing the usage of the Ant facility if everything is set up properly.

Property Settings
=================

You may place a simple text file named ".ant.properties" in your home
directory using which you can change certain properties. 
For example, by adding a line to .ant.properties you can change
the compiler to be used:

build.compiler=jikes
(without a blank after "jikes"!).

This will force Ant to compile with jikes if you have it on your system.
The other alternatives for this setting are:

build.compiler=modern
to use the most up-to-date version available to you
which for Sun is currently javac from jdk1.3

or the default if no explicit setting is made anywhere;

build.compiler=classic
to use a compiler/Virtual Machine combination compatible with jdk1.2.

On machines using Windows the home directory is selected to be C:\
so the instructions in the build file will look there for .ant.properties.

The filename is necessary for commonality with UNIX/LINUX systems
but you will not be able to save or rename a file to this
form of name using the Windows GUI directly. 
At least two workarounds are possible
(i) use Notepad (NOT Wordpad) to create, edit, rename or save the file
(ii) go into a DOS window and use the DOS command Edit to create,
edit, rename or save the file.
After these operations the file will still be visible in the GUI.

Compilation instructions for Peertrust
=====================================

If you want to compile Peertrust, you need to have following:
- your compiler in your PATH
- JAVA_HOME correctly set to where Java2 is installed
- ANT_HOME correctly set to where ANT is installed
- the additional libraries (jar files) in lib and ../../lib

when these are right the command

     build compile

will do the job.
With this arrangement problems with the set size of environment
may arise for DOS command line windows,
but a setting of 4096b should be ample on the Memory page 
of the Property dialogue box.

If something went wrong, go to the FAQ section below.

Also, you'll note that reusing a single JVM instance for each task,
increases tremendously the performance of the whole build system,
compared to other tools (i.e. make or shell scripts) where a new JVM
is started for each task.

Build targets
=============
See the usage target.

=================================== FAQ =======================================

1) Why some of the classes present in the original jar are not built anymore?

The Peertrust build system is very flexible:
if a module requires a package that
is not present in the classpath at build time, 
the module is skipped but
the built process is not stopped.

2) I see a lot of warnings starting like this:
        "Warning: file modified in the future:"
Sometimes ant gives out this warnings,
but the build is finished without any problems

3) "ant run" doesn't work, XML classes are not found, what's wrong?
Maybe you have hard-coded your ANT_HOME variable in the ant
start-script.  This way it doesn't find it's own XML-libs.
You need to set ANT_HOME in your shell.
