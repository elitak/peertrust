/*
   Basic datatypes
*/

VARIABLE ::=
   UPPER_CASE |
   '_' |
   UPPER_CASE STRING |
   '_' STRING

STRING_CONSTANT ::=
   LOWER_CASE |
   LOWER_CASE STRING |
   SINGLE_QUOTED_STRING

NUMBER ::=
   DIGIT |
   DIGIT NUMBER

STRING ::=
   CHARACTER |
   CHARACTER STRING

CHARACTER ::=
   UPPER_CASE |
   LOWER_CASE |
   DIGIT |
   '_'

SINGLE_QUOTED_STRING ::= "'"  (~["'","\\","\n","\r"])* "'"

UPPER_CASE ::= A | B | ... Z

LOWER_CASE ::= a | b | ... z

DIGIT ::= 0 | 1 | ... 9

/*
   (Meta)Rule components
*/

PREDICATE ::=
   STRING_CONSTANT |
   STRING_CONSTANT '(' ')' |
   STRING_CONSTANT '(' PREDICATE_CONTENT ')'
PREDICATE_CONTENT ::=
   PREDICATE_CONTENT_ELEMENT |
   PREDICATE_CONTENT_ELEMENT ',' PREDICATE_CONTENT
PREDICATE_CONTENT_ELEMENT ::= // DOUBLE_QUOTED_STRINGs and CONCATENATED_STRINGS are not allowed.
   NUMBER
   VARIABLE |
   COMPLEX_TERM |
   PREDICATE

GENERAL_NEGATION ::=
   'not' METAPREDICATE |
   NEGATION
NEGATION ::= 'not' NEGATION_CONTENT
NEGATION_CONTENT ::=
   PREDICATE |
   INFIXED

INFIXED ::= INFIXED_CONTENT OPERATOR INFIXED_CONTENT
INFIXED_CONTENT ::= // DOUBLE_QUOTED_STRINGs and CONCATENATED_STRINGS are not allowed.
   STRING_CONSTANT |
   NUMBER |
   VARIABLE |
   COMPLEX_TERM
OPERATOR ::=
   = |
   > |
   >= |
   < |
   <= |
   != |
   is

IN_PREDICATE ::= 'in(' LEFT_IN ',' STRING_CONSTANT ':' RIGHT_IN ')'
LEFT_IN ::=
   STRING_CONSTANT |
   STRING_CONSTANT '(' ')' |
   STRING_CONSTANT '(' LEFT_IN_CONTENT ')'
LEFT_IN_CONTENT ::=
   LEFT_IN_CONTENT_ELEMENT |
   LEFT_IN_CONTENT_ELEMENT ',' LEFT_IN_CONTENT
LEFT_IN_CONTENT_ELEMENT ::= // DOUBLE_QUOTED_STRINGs and CONCATENATED_STRINGS are not allowed.
   NUMBER
   VARIABLE |
   LEFT_IN
RIGHT_IN ::=
   STRING_CONSTANT |
   STRING_CONSTANT '(' ')' |
   STRING_CONSTANT '(' RIGHT_IN_CONTENT ')'
RIGHT_IN_CONTENT ::=
   CONCATENATED_STRING |
   CONCATENATED_STRING ',' RIGHT_IN_CONTENT

METAPREDICATE ::= LEFT_METAPREDICATE '.' STRING_CONSTANT ':' RIGHT_METAPREDICATE	
LEFT_METAPREDICATE ::=
   '[' STRING_CONSTANT ']' |
   '[' NUMBER ']' |
   PREDICATE
RIGHT_METAPREDICATE ::= // COMPLEX_TERMs are not allowed
   STRING_CONSTANT |
   NUMBER |
   VARIABLE |
   CONCATENATED_STRING

CONCATENATED_STRING ::=
   CONCATENATED_STRING_CONTENT |
   CONCATENATED_STRING_CONTENT '&' CONCATENATED_STRING
CONCATENATED_STRING_CONTENT ::=	// String representations of e.g. predicates are not allowed
   DOUBLE_QUOTED_STRING |
   VARIABLE

COMPLEX_TERM ::=
   LEFT_COMPLEX_TERM '[' ']' |
   LEFT_COMPLEX_TERM '[' COMPLEX_TERM_CONTENT ']'
LEFT_COMPLEX_TERM ::=
   STRING_CONSTANT |
   VARIABLE
COMPLEX_TERM_CONTENT ::=
   COMPLEX_TERM_CONTENT_ELEMENT |
   COMPLEX_TERM_CONTENT_ELEMENT ',' COMPLEX_TERM_CONTENT
COMPLEX_TERM_CONTENT_ELEMENT ::=
   STRING_CONSTANT ':' RIGHT_COMPLEX_TERM
RIGHT_COMPLEX_TERM ::= // DOUBLE_QUOTED_STRINGs and CONCATENATED_STRINGS are not allowed.
   STRING_CONSTANT |
   NUMBER |
   VARIABLE |
   COMPLEX_TERM

/*
   (Meta)Rules
*/

RULE ::=
   RULE_WITH_ID |
   RULE_WITHOUT_ID

RULE_WITH_ID ::=
   '[' STRING_CONSTANT ']' RULE_WITHOUT_ID |
   '[' NUMBER ']' RULE_WITHOUT_ID

RULE_WITHOUT_ID ::=
   PREDICATE '.' |
   PREDICATE ':-' BODY

BODY ::=
   BODY_CONTENT |
   BODY_CONTENT ',' BODY

BODY_CONTENT ::=
   PREDICATE |
   NEGATION |
   INFIXED |
   IN_PREDICATE |
   COMPLEX_TERM

METARULE ::=
   METAPREDICATE '.' |
   METAPREDICATE ':-' METABODY '.'

METABODY ::=
   METABODY_CONTENT |
   METABODY_CONTENT ',' METABODY

METABODY_CONTENT ::= // IN_PREDICATEs are not allowed in the metabody.
   PREDICATE |
   GENERAL_NEGATION |
   INFIXED |
   METAPREDICATE |
   COMPLEX_TERM

/*
   Program
*/

PROGRAM ::=
   E |
   PROGRAM_ELEMENT PROGRAM

PROGRAM_ELEMENT ::=
   RULE |
   METARULE |
   DIRECTIVE |
   COMMENT

DIRECTIVE ::=
   'include' DOUBLE_QUOTED_STRING |
   'load' DOUBLE_QUOTED_STRING
DOUBLE_QUOTED_STRING ::= "\""  (~["\"","\\","\n","\r"])*  "\""

COMMENT ::=
   "%" STRING_WITHOUT_EOL EOL |
   "//" STRING_WITHOUT_EOL EOL |
   "/*" ( )* "*/"

STRING_WITHOUT_EOL ::= (~["\n","\r"])*

EOL ::= (["\n","\r"])