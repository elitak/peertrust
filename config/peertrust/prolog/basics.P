
% Specific for YProlog

% print instead of write
write(X) :- print(X).

% findall

% An implementation of the findall relation.

findall( X, Goal, Xlist)  :-
  call( Goal),                         % Find a solution
  assert( queue(X) ),                 % Assert it
  fail.                               % Try to find more solutions
findall( _, _, Xlist)  :-
  assert( queue(bottom) ),            % Mark end of solutions
  collect( Xlist).                     % Collect the solutions 

collect( L)  :-
  retract( queue(X) ), !,              % Retract next solution
  ( X == bottom, !, L = []             % End of solutions?
    ;
    L = [X | Rest], collect( Rest) ).  % Otherwise collect the rest 

%
%findall(X, Y, _) :- 
%     asserta(proved(start)), 
%     call(Y), 
%     asserta(proved(X)), 
%     fail.

%findall(X, Y, L) :-
%     collect_up([], N) , !, L = N.
%
%collect_up(S, L) :-
%     getnext(X), 
%     !, 
%     collect_up([X|S], L) .

%collect_up(N, N) .

%getnext(X) :- 
%     retract(proved(X)),
%     !, 
%     \+ (X = start) .


% append
append([],L,L).
append([X|L1],L2,[X|L12]) :-
	append(L1,L2,L12).
