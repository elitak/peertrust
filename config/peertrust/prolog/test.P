
load :-
	consult('basics.P'),
	consult('tools.P'),
	consult('peerTrustReasoner.P'),
	setSelfAlias(alice),
	setDebugMode.

loadXSB :-
	[basics],
	dynamic(markSignal/1),
	dynamic(selectedFilteredRule/2),
	consult('tools.P'),
	init,
	consult('peerTrustReasoner.P'),
	setSelfAlias(alice),
	setDebugMode.

start_test(X,R) :-
	log_debug(['Test ',X]),
	test(X,R),
	log_debug(R),
	solution(X,R),
	log_debug(['Test ',X,' SUCCESSFUL']).
start_test2(X,R) :-
	log_debug(['Test ',X]),
	test(X,R),
	log_debug(R).

all_tests(List) :-
	findall(N,start_test(N,_R),List).

% begin examples
% ---------------------------------------
% query, rules and facts for example 1

element(1,rule('$'(access(Url), Requester),[],[validClient(Requester,Url)])).

element(2,rule(validClient(user,result1), [],[])).
element(3,rule(validClient(user,result2), [],[])).

element(4,rule('$'(access(Res),Requester),[available(Res)],['@'(vipClient(Requester),Requester),'@'(notify(Res,Requester),peer)])).
element(5,rule('$'(access(Res),Requester),[available(Res)],['@'(vipClient(Requester),peer)])).
element(6,rule(access(Res),[available(Res)],[public(Res)],private)).

element(7,rule(available(result1),[],[])).
element(8,rule(public(result2),[],[])).

state(9,'1c',2,notification('@'(vipClient(user),user),successful),proof).
state(10,'2c',2,notification('@'(vipClient(user),user),successful),proof).

state(11,'2e',2,notification('@'(vipClient(user),user),successful),proof).
state(12,'2e',3,notification('@'(notify(result1,user),peer),successful),proof).

element(13,rule('$'(accessBook(Book),Requester),['@'('@'(subscribed(Requester),bookshop),Requester)],[available(Book)])).

element(14,rule(available(book1),[],[])).

% ------------------------------------------------------------------------------
% Simple extract actions tests
% ------------------------------------------------------------------------------
test('1a',ActionList) :-
	requestExtractLocalActions(request('1a',validClient(user,result1),user), ActionList).
solution('1a',[]).

test('1b',ActionList) :-
	requestExtractLocalActions(request('1b',access(result1),user), ActionList).
solution('1b',['@'(vipClient(user),peer)]).

test('1c',ActionList) :-
	requestExtractLocalActions(request('1c',access(result1),user), ActionList).
solution('1c',['@'(notify(result1,user),peer),'@'(vipClient(user),peer)]).

test('1d',ActionList) :-
	requestExtractLocalActions(request('1d',access(result2),user), ActionList).
solution('1d',[]).

% ------------------------------------------------------------------------------
% Simple filtering tests
% ------------------------------------------------------------------------------
test('2a',FilteredRules) :-
	requestFiltering(request('2a',validClient(user,result1),user),FilteredRules).
solution('2a',[rule(validClient(user,result1), [],[])]).

test('2b',FilteredRules) :-
	requestFiltering(request('2b',access(result1),user),FilteredRules).
solution('2b',[rule(validClient(user,result1), [],[]),
	       rule('$'(access(Url), Requester),[],[validClient(Requester,Url)])]).

test('2c',FilteredRules) :-
	requestFiltering(request('2c',access(result1),user),FilteredRules).
solution('2c',[rule(validClient(user,result1), [],[]),
	       rule('$'(access(Url), Requester),[],[validClient(Requester,Url)])]).

test('2d',FilteredRules) :-
	requestFiltering(request('2d',access(result2),user),FilteredRules).
solution('2d',[rule(validClient(user,result2), [],[]),
	       rule('$'(access(Url), Requester),[],[validClient(Requester,Url)])]).

test('2e',FilteredRules) :-
	requestFiltering(request('2e',access(result1),user),FilteredRules).
solution('2e',[rule(available(result1),[],[]),
	       notification('@'(vipClient(user),user),successful),
	       notification('@'(notify(result1,user),peer),successful),
	       rule('$'(access(Res),Requester),[available(Res)],['@'(vipClient(Requester),Requester),'@'(notify(Res,Requester),peer)]),
	       rule(validClient(user,result1), [],[]),
	       rule('$'(access(Url), Requester),[],[validClient(Requester,Url)])]).
	       
test('2f',FilteredRules) :-
	requestFiltering(request('2f',accessBook(book1),user),FilteredRules).
solution('2f',[rule('$'(accessBook(_Book),Requester),['@'('@'(subscribed(Requester),bookshop),Requester)],[blurred])]).

% ------------------------------------------------------------------------------
% Simple extract requester actions tests
% ------------------------------------------------------------------------------

test('3a',ActionList) :-
	test('2e',FilteredRules),
	requestInsertRules(request('3a',FilteredRules,addNew,sideKB)),
	requestExtractRequesterActions(request('3a',access(result1),alice),ActionList).
solution('3a',[]).

test('3b',ActionList) :-
	test('2f',FilteredRules),
	requestInsertRules(request('3b',FilteredRules,addNew,sideKB)),
	requestExtractRequesterActions(request('3b',accessBook(book1),alice),ActionList).
solution('3b',['@'(subscribed(user),bookshop)]).

% ---------------------------------------
% query, rules and facts for example 7

% alice has an employee ID

% employee(alice,microsoft) @ microsoft signedBy microsoft
signed(100,rule('@'(employee(alice, microsoft), microsoft), [], []),microsoft).

% ---------------------------------------
% Semantic Web paper example

% drivingLicense(alice) @ caState signedBy caState
signed(101,rule('@'(drivingLicense(alice), caState), [], []),caState).

% policeOfficer(alice) @ caStatePolice $ Requester:-
%          bbbMember(Requester) @ bbb @ Requester
%          signedBy caStatePolice
signed(102,rule('@'(policeOfficer(alice), caStatePolice), [], []),caStatePolice).
policy(103,'$'('@'(policeOfficer(alice), caStatepolice), Requester),
            ['@'('@'(bbbMember(Requester), bbb), Requester)]).


%---------------------------------------
% Pharmaceutical example

%isPharmacy(alice)@fda :-
%          isPharmacy(alice)@massBP
%          signedBy fda
signed(104, rule( '@'(isPharmacy(alice),fda), [], [] ), fda, signature( fda ) ).
policy(105, '@'(isPharmacy(X),fda), ['@'(isPharmacy(X),massBP)] ).

% isPharmacy(alice)@massBP $ Requester :-
%          isPharmaceuticalCo(Requester)@fda@Requester
%          signedBy massBP
signed(106, rule( '$'('@'(isPharmacy(alice),massBP),_Requester), [], [] ), massBP).

policy( 107, '$'('@'(isPharmacy(alice),massBP),Requester), ['@'('@'(isPharmaceuticalCo(Requester),fda),Requester)] ).

