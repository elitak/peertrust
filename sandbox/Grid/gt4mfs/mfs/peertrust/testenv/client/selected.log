INFO main org.peertrust.config.PTConfigurator - Log4j configured based on file ".logconfig"
DEBUG main org.peertrust.config.PTConfigurator - $Id: PTConfigurator.java,v 1.7 2005/05/22 17:56:48 dolmedilla Exp $
INFO main org.peertrust.config.PTConfigurator - Current directory: /home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client
DEBUG main org.peertrust.config.PTConfigurator - .startApp()
DEBUG main org.peertrust.config.PTConfigurator - .loadConfiguration()
DEBUG main org.peertrust.config.PTConfigurator - .loadConfiguration() (file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf)
INFO main org.peertrust.config.PTConfigurator - Read 54 statements from configuration file
DEBUG main org.peertrust.config.PTConfigurator - .baseConfigure()
INFO main org.peertrust.config.PTConfigurator - Retrieving root node of configuration file...
INFO main org.peertrust.config.PTConfigurator - Resource configured: file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEngine
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:PTEngine]
DEBUG main org.peertrust.PTEngine - $Id: PTEngine.java,v 1.4 2005/05/22 17:56:45 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEngine]
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:PTEventListener]
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEventListener]
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:PTEventDispatcher]
DEBUG main org.peertrust.event.PTEventDispatcher - $Id: PTEventDispatcher.java,v 1.5 2005/05/22 17:56:46 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEventDispatcher]
DEBUG main org.peertrust.event.PTEventDispatcher - .registering org.peertrust.tnviz.app.TNVizListener to event org.peertrust.event.PTEvent
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:MetaInterpreter]
DEBUG main org.peertrust.meta.MetaInterpreter - $Id: MetaInterpreter.java,v 1.17 2005/05/22 17:56:49 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#MetaInterpreter]
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:CredentialStore]
DEBUG main org.peertrust.security.credentials.CredentialStore - Created
DEBUG main org.peertrust.security.credentials.x509.X509CredentialStore - created
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#CredentialStore]
DEBUG main org.peertrust.config.PTConfigurator - Property 'storePassword', value 'clientstorepw'
DEBUG main org.peertrust.config.PTConfigurator - Property 'file', value 'client_keystore'
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Test if <<[2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))]>> is a Credential. (was [2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))])
DEBUG main org.peertrust.security.credentials.x509.X509Credential - SubjectAlternativeName 1: [2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))]
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Casting the extension to a Collection. (java.util.Collections$UnmodifiableRandomAccessList)
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Extracted String: signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Test if <<[2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))]>> is a Credential. (was [2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))])
DEBUG main org.peertrust.security.credentials.x509.X509Credential - SubjectAlternativeName 1: [2, signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))]
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Casting the extension to a Collection. (java.util.Collections$UnmodifiableRandomAccessList)
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Extracted String: signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))
ERROR main org.peertrust.security.credentials.x509.X509Credential - This Certificate has no 'SubjectAlternativeExtension.
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Test if <<[2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))]>> is a Credential. (was [2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))])
DEBUG main org.peertrust.security.credentials.x509.X509Credential - SubjectAlternativeName 1: [2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))]
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Casting the extension to a Collection. (java.util.Collections$UnmodifiableRandomAccessList)
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Extracted String: signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Test if <<[2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))]>> is a Credential. (was [2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))])
DEBUG main org.peertrust.security.credentials.x509.X509Credential - SubjectAlternativeName 1: [2, signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))]
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Casting the extension to a Collection. (java.util.Collections$UnmodifiableRandomAccessList)
DEBUG main org.peertrust.security.credentials.x509.X509Credential - Extracted String: signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))
DEBUG main org.peertrust.config.PTConfigurator - Property 'peerName', value 'Alice'
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEventDispatcher is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:EntitiesTable]
DEBUG main org.peertrust.net.EntitiesTable - $Id: EntitiesTable.java,v 1.3 2005/05/22 17:56:44 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#EntitiesTable]
DEBUG main org.peertrust.config.PTConfigurator - Property 'entitiesFile', value '/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/entities.dat'
DEBUG main org.peertrust.net.EntitiesTable - (Init) Entities file: /home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/entities.dat
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:RunTimeOptions]
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#RunTimeOptions]
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:Queue]
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#Queue]
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:CommunicationChannelFactory]
DEBUG main org.peertrust.net.ssl.SecureSocketFactory - $Id: SecureSocketFactory.java,v 1.4 2005/05/22 17:56:45 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#CommunicationChannelFactory]
DEBUG main org.peertrust.config.PTConfigurator - Property 'storePassword', value 'clientstorepw'
DEBUG main org.peertrust.config.PTConfigurator - Property 'keyPassword', value 'clientpw'
DEBUG main org.peertrust.config.PTConfigurator - Property 'host', value 'localhost'
DEBUG main org.peertrust.config.PTConfigurator - Property 'keystoreFile', value 'client_keystore'
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:InferenceEngine]
DEBUG main org.peertrust.inference.MinervaProlog - $Id: MinervaProlog.java,v 1.8 2005/05/22 17:56:47 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#InferenceEngine]
DEBUG main org.peertrust.config.PTConfigurator - Property 'prologFiles', value 'policies.alice'
DEBUG main org.peertrust.config.PTConfigurator - Property 'license', value 'minervagui.mca'
DEBUG main org.peertrust.config.PTConfigurator - Property 'baseFolder', value '/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/'
DEBUG main org.peertrust.config.PTConfigurator - Property 'rdfFiles', value ''
DEBUG main org.peertrust.inference.MinervaProlog - (Init) PrologFiles = policies.alice - RdfFiles =  - _baseFolder = /home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/ - License = minervagui.mca
DEBUG main org.peertrust.inference.MinervaProlog - Engine initialized
DEBUG main org.peertrust.inference.MinervaProlog - Inserting debug_on in the KB
DEBUG main org.peertrust.inference.MinervaProlog - Program loaded
DEBUG main org.peertrust.inference.MinervaProlog - Loading file /home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/policies.alice into the inference engine
DEBUG main org.peertrust.inference.MinervaProlog - File /home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/policies.alice loaded
INFO main org.peertrust.meta.MetaInterpreter - PeerName = alice
DEBUG main org.peertrust.meta.MetaInterpreter - (Init) PeerName = alice
DEBUG main org.peertrust.inference.MinervaProlog - Inserting peerName(alice) in the KB
DEBUG main org.peertrust.meta.MetaInterpreter - Adding credential string 'signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice))'
DEBUG main org.peertrust.inference.MinervaProlog - Inserting signed(rule(policeOfficer(alice) @ caStatePolice, [], []), caStatePolice, signature(caStatePolice)) in the KB
DEBUG main org.peertrust.meta.MetaInterpreter - Adding credential string 'signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState))'
DEBUG main org.peertrust.inference.MinervaProlog - Inserting signed(rule(drivingLicense(alice) @ caState, [], []), caState, signature(caState)) in the KB
DEBUG main org.peertrust.net.ssl.SecureSocketFactory - Creating new NetClient
DEBUG main org.peertrust.net.ssl.SecureSocketFactory - keystoreFile: client_keystore - keyPassword: clientpw - storePassword: clientstorepw
DEBUG main org.peertrust.net.ssl.SecureClientSocket - $Id: SecureClientSocket.java,v 1.4 2005/05/22 17:56:45 dolmedilla Exp $
DEBUG main org.peertrust.meta.MetaInterpreter - Local Peer: alias = alice - host = localhost - port = 32000
DEBUG main org.peertrust.event.PTEventDispatcher - .registering org.peertrust.meta.MetaInterpreter to event org.peertrust.event.QueryEvent
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEventDispatcher is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - .createObject() [Resource:MetaInterpreterListener]
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - start
DEBUG main org.peertrust.meta.MetaInterpreterListener - $Id: MetaInterpreterListener.java,v 1.12 2005/05/22 17:56:49 dolmedilla Exp $
DEBUG main org.peertrust.config.PTConfigurator - .configure() [Object:file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#MetaInterpreterListener]
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#EntitiesTable is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#CommunicationChannelFactory is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#RunTimeOptions is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#InferenceEngine is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEventDispatcher is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.config.PTConfigurator - The object file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#Queue is already defined in the configuration file. Reusing object
DEBUG main org.peertrust.net.ssl.SecureSocketFactory - Creating new NetServer
DEBUG main org.peertrust.net.ssl.SecureSocketFactory - port: 32000 - keystoreFile: client_keystore - keyPassword: clientpw - storePassword: clientstorepw
DEBUG main org.peertrust.net.ssl.SecureServerSocket - $Id: SecureServerSocket.java,v 1.5 2005/05/22 17:56:45 dolmedilla Exp $
INFO main org.peertrust.config.PTConfigurator - Basic peer configuration succeded
INFO main org.peertrust.config.PTConfigurator - Peer configured: file:/home/ionut/Eclipse/eclipse/workspace/peertrust/peertrust/testenv/client/peertrustConfig.client.rdf#PTEngine
DEBUG MetaInterpreterListener org.peertrust.meta.MetaInterpreterListener - start
INFO MetaInterpreterListener org.peertrust.meta.MetaInterpreterListener - System ready
DEBUG main org.peertrust.event.PTEventDispatcher - Distributing event org.peertrust.event.QueryEvent from org.peertrust.TrustClient
DEBUG main org.peertrust.event.PTEventDispatcher - 1 elements registered for the event org.peertrust.event.QueryEvent
DEBUG main org.peertrust.event.PTEventDispatcher - Broadcasting event to listeners registered for the event org.peertrust.event.QueryEvent
DEBUG main org.peertrust.meta.Tree - Parsing proof: []
DEBUG main org.peertrust.meta.Tree - Created: Id: |1| - originalGoal: |request(spanishCourse,Session) @ elearn| - Goal: |request(spanishCourse,Session) @ elearn| Subgoals: |[query(request(spanishCourse,Session) @ elearn,no)]| - Proof: |[]| LastExpandedGoal: |null|
DEBUG main org.peertrust.meta.MetaInterpreter - New query received from client: request(spanishCourse,Session) @ elearn
DEBUG main org.peertrust.event.PTEventDispatcher - 1 elements registered for the event org.peertrust.event.PTEvent
DEBUG main org.peertrust.event.PTEventDispatcher - Broadcasting event to listeners registered for the event org.peertrust.event.PTEvent
DEBUG main org.peertrust.tnviz.app.TNVizListener - New query received from client: request(spanishCourse,Session) @ elearn - 1 - []
DEBUG MetaInterpreter org.peertrust.inference.LogicQuery - Created: Query: |request(spanishCourse,Session) @ elearn| - Subgoals: |[query(request(spanishCourse,Session) @ elearn,no)]| Requester: |client|
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Process logic query: request(spanishCourse,Session) @ elearn - [query(request(spanishCourse,Session) @ elearn,no)]
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Query: tree(request(spanishCourse,Session) @ elearn,[query(request(spanishCourse,Session) @ elearn,no)],[],client)
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Minerva Query: tree(@(request(spanishCourse,V11894426),elearn),[query(@(request(spanishCourse,V11894426),elearn),no)],[],client)
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Sending to the engine:processTree(tree(@(request(spanishCourse,V11894426),elearn),[query(@(request(spanishCourse,V11894426),elearn),no)],[],client),Return)
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Receiving from the engine:[tree(@(request(spanishCourse,V22775072),elearn),[],[],elearn,request(spanishCourse,V22775072))]
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Parsed results: [tree(request(spanishCourse,V22775072)@elearn,[],[],elearn,request(spanishCourse,V22775072))]
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Current tree string: tree(request(spanishCourse,V22775072)@elearn,[],[],elearn,request(spanishCourse,V22775072))
DEBUG MetaInterpreter org.peertrust.inference.MinervaProlog - Delegator: elearn
DEBUG MetaInterpreter org.peertrust.inference.LogicAnswer - Created: Goal: |request(spanishCourse,V22775072)@elearn| - Subgoals: |[]| - Proof: |[]|
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - results == 1
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Searching for delegator 'elearn' in the entities table
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Delegator == elearn
DEBUG MetaInterpreter org.peertrust.meta.Tree - Parsing proof: []
DEBUG MetaInterpreter org.peertrust.meta.Tree - Created: Id: |2| - originalGoal: |request(spanishCourse,V22775072)@elearn| - Goal: |request(spanishCourse,V22775072)@elearn| Subgoals: |[]| - Proof: |[]| LastExpandedGoal: |request(spanishCourse,V22775072)|
DEBUG MetaInterpreter org.peertrust.meta.Tree - Parsing proof: []
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Initial requester: client
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Delegated to: elearn
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Trace is:[request(spanishCourse,V22775072)?]
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Sending request request(spanishCourse,V22775072) to elearn from alice
DEBUG MetaInterpreter org.peertrust.meta.MetaInterpreter - Send query to localhost:37000 from alice
DEBUG MetaInterpreter org.peertrust.net.ssl.SecureClientSocket - Send() org.peertrust.net.Query@1aacd5f to elearn
DEBUG MetaInterpreter org.peertrust.event.PTEventDispatcher - Distributing event org.peertrust.event.QueryEvent from org.peertrust.meta.MetaInterpreter
DEBUG MetaInterpreter org.peertrust.event.PTEventDispatcher - 1 elements registered for the event org.peertrust.event.QueryEvent
DEBUG MetaInterpreter org.peertrust.event.PTEventDispatcher - Broadcasting event to listeners registered for the event org.peertrust.event.QueryEvent
DEBUG MetaInterpreter org.peertrust.event.PTEventDispatcher - 1 elements registered for the event org.peertrust.event.PTEvent
DEBUG MetaInterpreter org.peertrust.event.PTEventDispatcher - Broadcasting event to listeners registered for the event org.peertrust.event.PTEvent
DEBUG MetaInterpreter org.peertrust.tnviz.app.TNVizListener - New query received from alice: request(spanishCourse,V22775072) - 2 - [request(spanishCourse,V22775072)?]
DEBUG MetaInterpreter org.peertrust.tnviz.app.TNTreeDiagramm - [request(spanishCourse,V22775072)?]
DEBUG MetaInterpreter org.peertrust.tnviz.app.TNTreeDiagramm - [request(spanishCourse,V22775072)?]length 1
DEBUG Thread-1 org.peertrust.meta.MetaInterpreterListener - Stopping
